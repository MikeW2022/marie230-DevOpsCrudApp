---
# Create the jenkins job pipeline
# see https://docs.ansible.com/ansible/devel/modules/jenkins_job_module.html

- name: Immediately restart Jenkins after plugins installed
  service: name=jenkins state=restarted
  tags: ['skip_ansible_lint']

- name: Ensure Jenkins is started and runs after plugin installation.
  service: name=jenkins state=started enabled=yes

- name: Wait for Jenkins to start up before proceeding.
  command: >
    curl -D - --silent --max-time 5 http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/
  args:
    warn: false
  register: result
  until: >
    (result.stdout.find("403 Forbidden") != -1)
    or (result.stdout.find("200 OK") != -1)
    and (result.stdout.find("Please wait while") == -1)
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false
  check_mode: false

- name: Create Pipelines | Install python-jenkins
  pip:
    name: python-jenkins
    state: present

- name: Create Pipelines | Install lxml
  pip:
    name: lxml
    state: present

- name: Create Pipelines | Create development environment pipeline
  jenkins_job:
    config: "{{ lookup('file', 'templates/development-pipeline-config.xml') }}"
    name: Development
    password: admin
    url: http://localhost:8080
    user: admin

- name: Create Pipelines | Create production environment pipeline
  jenkins_job:
    config: "{{ lookup('file', 'templates/production-pipeline-config.xml') }}"
    name: Production
    password: admin
    url: http://localhost:8080
    user: admin
